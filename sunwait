#!/usr/bin/env perl

use strict;
use warnings;

# debian/ubuntu users probably need to install only 
# libdatetime-event-sunrise-perl

use DateTime;
use DateTime::Event::Sunrise;
use Getopt::Long;

my $lat;
my $long;
my $debug;
my $offset;
my $wait_for;

GetOptions ("lat=f"     => \$lat,
            "long=f"    => \$long,
            "offset=i"  => \$offset,
	    "debug"     => \$debug)
or die("Error in command line arguments\n");

die usage("you need to supply the --latitude and --longitude")
  if (! defined $lat || ! defined $long);

$wait_for = shift || die usage("you need to supply either 'rise' or 'set' as a single trailing argument");

die usage("invalid argument - use 'rise' or 'set'") if ($wait_for ne 'rise' && $wait_for ne 'set');

my $sun = DateTime::Event::Sunrise->new(longitude => $long,
                                        latitude  => $lat);
my $dt = DateTime->now(time_zone => 'local');

my $rise = $sun->sunrise_datetime($dt);
if ($rise < $dt) {
  $rise = $sun->sunrise_datetime($dt->clone->add(days => 1));
}
my $set  = $sun->sunset_datetime($dt);
if ($set < $dt) {
  $set = $sun->sunrise_datetime($dt->clone->add(days => 1));
}

if ($offset) {
  $rise->add(minutes => $offset);
  $set->add (minutes => $offset);
}

my $wait_dt;
$wait_dt = $rise if ($wait_for eq 'rise');
$wait_dt = $set  if ($wait_for eq 'set');

warn "Waiting until $wait_dt (currently it is $dt)\n" if ($debug);

while ($wait_dt > $dt) {
  $dt = DateTime->now();
  sleep 1;
}

exit 0;

sub usage {
  my $error = shift;
  my $output;
  $output .= "Error: $error\n\n" if $error;

  $output .= "Usage: $0 --lat=xxx.yyy --long=aaa.bbb [--offset=60] [--debug] rise|set\n";
  return $output;
}
